<form method="post" enctype="multipart/form-data">
    <img id="iconpreview" src="<%= game ? `/game/${game._id}/icon` : "/placeholder.png" %>" style="float: left; margin-right: 1em;" width="96" height="96">
    <h2>Basic information</h2>
    <label>Game name: <input type="text" name="gamename" required value="<%= game?.name %>"></label><br>
    <label>Game icon: <input type="file" name="icon" accept="image/png, image/vnd.microsoft.icon" onchange="renderImage()"></label>
    <h2 style="margin-bottom: 0;">Executables <button onclick="addExecutable(event)">new</button> <button onclick="autofillExecutables(event)">autofill</button></h2>
    <table id="executablearea">
        <% game?.executables.forEach(function(executable, index) { %>
            <tr id="executable_wrap_<%= index %>">
                <td><input type='text' name='executable_name_<%= index %>' placeholder='name' value="<%= executable.name %>" oninput="smartName(event)"></td>
                <td><input type='text' name='executable_arguments_<%= index %>' placeholder='arguments' value="<%= executable.arguments %>"></td>
                <td><input type='text' name='executable_platform_<%= index %>' placeholder='platform' required value="<%= executable.platform %>"></td>
                <td><button onclick="event.preventDefault();this.parentNode.parentNode.remove();">delete</button></td>
            </tr>
        <% }); %>
    </table>

    <h3 style="margin-bottom: 0;">Done ^-^</h3>
    <input type="submit">
</form>
<script>
    function addExecutable(e, data) {
        e?.preventDefault();

        const executable = document.createElement("tr");
        const curRow = document.querySelector("[id^='executable_wrap_']") ? parseInt(Array.from(document.querySelectorAll("[id^='executable_wrap_']")).slice(-1)[0].id.split("_")[2]) + 1 : 0
        executable.id = `executable_wrap_${curRow}`
        executable.innerHTML += `<td><input type='text' name='executable_name_${curRow}' placeholder='name' pattern='.*(?<!\.app)$' oninput='smartName(event)'></td>`
        executable.innerHTML += `<td><input type='text' name='executable_arguments_${curRow}' placeholder='arguments'></td>`
        executable.innerHTML += `<td><input type='text' name='executable_platform_${curRow}' placeholder='platform' required></td>`

        executable.innerHTML += `<td><button onclick="event.preventDefault();this.parentNode.parentNode.remove();">delete</button></td>`

        document.querySelector("#executablearea").appendChild(executable);

        if(data) {
            if(data.name) document.querySelector(`input[name='executable_name_${curRow}']`).value = data.name;
            if(data.arguments) document.querySelector(`input[name='executable_arguments_${curRow}']`).value = data.arguments;
            if(data.platform) document.querySelector(`input[name='executable_platform_${curRow}']`).value = data.platform;
        }
    }

    async function autofillExecutables(e) {
        e?.preventDefault();

        const steamFill = (await (await fetch(`/steam/${document.querySelector("input[name='gamename']").value}`)).json());
        if(!steamFill) alert("Server error")

        document.querySelector("input[name='gamename']").value = steamFill.name
        document.querySelector("#executablearea").innerHTML = "";
        Object.values(steamFill.executables).forEach(function(executable) {
            addExecutable(undefined, {
                name: executable.executable.toLowerCase(),
                platform: !executable.config?.oslist ? "win32" : executable.config.oslist === "windows" ? "win32" : executable.config.oslist === "macos" ? "darwin" : "linux"
            })
        })
    }

    function renderImage() {
        const fileReader = new FileReader();
        fileReader.readAsDataURL(document.querySelector("[name='icon']").files[0]);
        fileReader.onload = (e) => document.querySelector("#iconpreview").src = e.target.result;
    }

    function smartName(e) {
        e.target.value = e.target.value.toLowerCase();

        const platform = document.querySelector(`input[name="executable_platform_${e.target.name.split("executable_name_")[1]}"]`)
        if(e.target.value.endsWith(".exe")) {
            platform.value = "win32";
        } else if (/.*\.app\//.test(e.target.value)) {
            platform.value = "darwin"
        }
    }

    document.addEventListener("DOMContentLoaded", function() {
        <% if (!game) { %> addExecutable(); <% } %>
    })
</script>
